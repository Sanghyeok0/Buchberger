import Mathlib.RingTheory.MvPolynomial.MonomialOrder
import Mathlib.RingTheory.MvPolynomial.Ideal
import Mathlib.RingTheory.Noetherian.Defs

variable {σ R : Type*} [CommSemiring R]
variable {k : Type*} [Field k]
variable {m : MonomialOrder σ}

namespace MvPolynomial

open scoped MonomialOrder

/-
## Reference : [Becker-Weispfenning1993]

## TODO

* Authors: Antoine Chambert-Loir

* Prove that under `Field F`, `IsUnit (m.leadingCoeff (b i))` is equivalent to `b i ≠ 0`.
-/

theorem isUnit_leadingCoeff_iff_nonzero {F : Type*} [Field F]
  (m : MonomialOrder σ) (b : MvPolynomial σ F) :
  IsUnit (m.leadingCoeff b) ↔ b ≠ 0 := by
  constructor
  · intro h
    contrapose! h
    rw [h, m.leadingCoeff_zero]
    exact not_isUnit_zero
  · intro hb
    have h₁ : m.leadingCoeff b ≠ 0 := by exact MonomialOrder.leadingCoeff_ne_zero_iff.mpr hb
    exact isUnit_iff_ne_zero.mpr h₁

variable (m) in
/-- the leading coefficient of a multivariate polynomial with respect to a monomial ordering -/
noncomputable def leadingTerm (f : MvPolynomial σ R) : MvPolynomial σ R :=
  monomial (m.degree f) (f.coeff (m.degree f))

variable (m) in
/-- The set of leading terms of nonzero polynomials in an ideal I. -/
def leadingTermSet (I : Ideal (MvPolynomial σ R)) : Set (MvPolynomial σ R) :=
  { f | ∃ g ∈ I, g ≠ 0 ∧ leadingTerm m g = f }

variable (m) in
/-- The ideal generated by the leading terms of the nonzero elements of I. -/
def initialIDeal (I : Ideal (MvPolynomial σ R)) : Ideal (MvPolynomial σ R) :=
  Ideal.span (leadingTermSet m I) -- initialIDeal = Ideal.span { f | ∃ g ∈ I, g ≠ 0 ∧ leadingTerm m g = f }

-- Proposition 3.
theorem initialIDeal_is_monomial_ideal {I : Ideal (MvPolynomial σ R)} (hI : I ≠ ⊥) :
  ∃ (A : Finset (σ →₀ ℕ)), (A.toSet ⊆ { s : (σ →₀ ℕ) | ∃ (g : MvPolynomial σ R), g ∈ I ∧ g ≠ 0 ∧ m.degree g = s } ∧
    initialIDeal m I = Ideal.span { f | ∃ s ∈ A, f = monomial s (1 : R) }) := by sorry

/- Definition 5. Groebner_basis
A finite subset G of an ideal I is called a Gröbner basis (or standard basis)
if the ideal generated by the leading terms of the elements of G equals the leading term ideal of I.
We adopt the convention that ⟨∅⟩ = {0}, so that the empty set is the Gröbner basis of the zero ideal.
-/

variable (m) in
def isGrobnerBasis {ι : Type*} (I : Ideal (MvPolynomial σ R)) (G : ι →₀ MvPolynomial σ R) [DecidableEq (MvPolynomial σ R)]: Prop :=
  (I = ⊥ ∧ G = 0) ∨
  (I ≠ ⊥ ∧ (∀ i ∈ G.support, G i ∈ I) ∧
    Ideal.span (G.support.image (fun i ↦ leadingTerm m (G i))) = initialIDeal m I)

/-
Corollary 6.
Fix a monomial order on \(k[x_1,\dots,x_n]\). Then every ideal \(I\) has a Gröbner basis.
Furthermore, any Gröbner basis for \(I\) is a generating set of \(I\).
-/

variable [Fintype σ] [IsNoetherianRing R] in
theorem Hilbert_basis_initial (I : Ideal (MvPolynomial σ R)) : Ideal.FG (initialIDeal m I)
  := sorry --(inferInstance : IsNoetherian _ _).noetherian (initialIDeal m I)

variable [Fintype σ] in
theorem grobner_basis_exists (I : Ideal (MvPolynomial σ R)) [DecidableEq (MvPolynomial σ R)]:
  ∃ (ι : Type*) (G : ι →₀ MvPolynomial σ R), isGrobnerBasis m I G := by
  -- have h_fin : Ideal.FG (initialIDeal m I) := Hilbert_basis_initial I
  sorry

/-
A polynomial `f` in `MvPolynomial σ R` is said to reduce to zero modulo a
finite set of polynomials `G ⊆ MvPolynomial σ R` (written `f ⟶[G] 0`) if there
exists a standard representation
  f = ∑ (g ∈ G), A(g) * g,
where `A : G → MvPolynomial σ R`, such that for every `g ∈ G`, if
  A(g) * g ≠ 0,
then
  m.degree (A(g) * g) ≤ m.degree f.
-/

variable [Fintype σ] in
def reduces_to_zero (G : Finset (MvPolynomial σ k)) (f : MvPolynomial σ k) : Prop :=
∃ (A : MvPolynomial σ k → MvPolynomial σ k),
  (f = ∑ g ∈ G, (A g) * g) ∧ ∀ g ∈ G, (A g) * g ≠ 0 → m.degree ((A g) * g) ≼[m] m.degree f
